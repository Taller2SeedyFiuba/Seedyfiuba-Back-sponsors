{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "SeedyFiuba Sponsors Microservice",
    "description": "API documentation for Sponsors Microservice",
    "contact": {
      "name": "SeedyFiuba",
      "url": "https://github.com/Taller2SeedyFiuba"
    }
  },
  "tags": [
    {
      "name": "sponsors",
      "description": "Everything about sponsors"
    },
    {
      "name": "favourites",
      "description": "Everything about favourites"
    },
    {
      "name": "viewers",
      "description": "Everything about viewers"
    }
  ],
  "paths": {
    "/api/sponsors": {
      "get": {
        "tags": [
          "sponsors"
        ],
        "summary": "Search all sponsors",
        "operationId": "getSponsoredProjects",
        "parameters": [
          {
            "in": "query",
            "name": "userid",
            "schema": {
              "type": "string"
            },
            "description": "Filter by given user id"
          },
          {
            "in": "query",
            "name": "projectid",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by a given project id"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectSponsor"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags": [
          "sponsors"
        ],
        "summary": "Sponsor a new project specified by id",
        "operationId": "sponsorNewProject",
        "requestBody": {
          "description": "A JSON object containing project and user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSponsor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSponsor"
                }
              }
            }
          },
          "400": {
            "description": "The specified project id is wrong."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/favourites": {
      "get": {
        "tags": [
          "favourites"
        ],
        "summary": "Search all favourites",
        "operationId": "getFavouriteProjects",
        "parameters": [
          {
            "in": "query",
            "name": "userid",
            "schema": {
              "type": "string"
            },
            "description": "Filter by given user id"
          },
          {
            "in": "query",
            "name": "projectid",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by a given project id"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectFavourite"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags": [
          "favourites"
        ],
        "summary": "Add a to favourites a new sponsor specified by id",
        "operationId": "favouritesNewProject",
        "requestBody": {
          "description": "A JSON object containing project and user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectFavourite"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFavourite"
                }
              }
            }
          },
          "400": {
            "description": "The specified project id is wrong."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/favourites/users/{userid}/projects/{projectid}": {
      "delete": {
        "tags": [
          "favourites"
        ],
        "summary": "Project specified by id will be deleted from logged user favourite list",
        "operationId": "favouritesDeleteProject",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to delete from favourites"
          },
          {
            "in": "path",
            "name": "projectid",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the project to delete from favourites"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFavourite"
                }
              }
            }
          },
          "400": {
            "description": "The specified project id is wrong."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/viewers": {
      "get": {
        "tags": [
          "viewers"
        ],
        "summary": "Search all viewers",
        "operationId": "getViewerProjects",
        "parameters": [
          {
            "in": "query",
            "name": "userid",
            "schema": {
              "type": "string"
            },
            "description": "Filter by given user id"
          },
          {
            "in": "query",
            "name": "projectid",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by a given project id"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectViewer"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags": [
          "viewers"
        ],
        "summary": "Add a viewer",
        "operationId": "createViewer",
        "requestBody": {
          "description": "A JSON object containing viewer information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": {
                    "type": "string",
                    "example": "ijac73bu8ckjau1saudhdsvp91"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Viewer"
                }
              }
            }
          },
          "400": {
            "description": "The viewer already exists."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/viewers/{id}": {
      "get": {
        "tags": [
          "viewers"
        ],
        "summary": "Ask if a viewer exists",
        "operationId": "viewerExists",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "Filter by given user id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/viewers/{id}/projects": {
      "post": {
        "tags": [
          "viewers"
        ],
        "summary": "Add a project to viewer's reviewed projects",
        "operationId": "viewerNewProject",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "Viewer userid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProjectViewer"
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectViewer"
                }
              }
            }
          },
          "400": {
            "description": "The specified project id is wrong."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/viewers/{id}/vote": {
      "post": {
        "tags": [
          "viewers"
        ],
        "summary": "Add a vote from a reviewer to a project stage",
        "operationId": "viewerVoteProject",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "Viewer userid"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Vote"
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vote"
                }
              }
            }
          },
          "400": {
            "description": "The specified parameters are wrong."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/metrics": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "Get business service metrics",
        "operationId": "getMetrics",
        "parameters": [
          {
            "in": "query",
            "name": "timeinterval",
            "schema": {
              "type": "string",
              "enum": [
                "month",
                "week",
                "day",
                "hour",
                "minute",
                "second"
              ]
            },
            "description": "Time interval to measure metric"
          },
          {
            "in": "query",
            "name": "fromdate",
            "schema": {
              "type": "string"
            },
            "description": "First date to measure"
          },
          {
            "in": "query",
            "name": "todate",
            "schema": {
              "type": "string"
            },
            "description": "Last date to measure"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metrics"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/status": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "Get service and database status",
        "operationId": "getStatus",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal service error"
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "ProjectViewer": {
        "description": "A JSON object containing viewer information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "projectid": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          }
        }
      },
      "Viewer": {
        "description": "A JSON object containing viewer information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userid": {
                  "type": "string",
                  "example": "skaoi1jd09ajslk01smpxab1"
                }
              }
            }
          }
        }
      },
      "Vote": {
        "description": "A JSON object containing vote information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "projectid": {
                  "type": "integer",
                  "example": 1
                },
                "stage": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "ProjectSponsor": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "string",
            "example": "05yseyhiEWPNvkYYbdHL77dHKWi1"
          },
          "projectid": {
            "type": "integer",
            "example": 5
          },
          "newsponsor": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "ProjectFavourite": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "string",
            "example": "05yseyhiEWPNvkYYbdHL77dHKWi1"
          },
          "projectid": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "ProjectViewer": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "string",
            "example": "05yseyhiEWPNvkYYbdHL77dHKWi1"
          },
          "projectid": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "Viewer": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "string"
          },
          "promotedate": {
            "type": "string",
            "format": "date",
            "example": "2020-04-03T23:15:14"
          }
        }
      },
      "Vote": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "string"
          },
          "projectid": {
            "type": "integer",
            "example": 5
          },
          "stage": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "Metrics": {
        "type": "object",
        "properties": {
          "viewershistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date"
                },
                "metric": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}